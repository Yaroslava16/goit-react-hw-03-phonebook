{"version":3,"sources":["components/App.module.css","components/Filter/Filter.module.css","components/Form/Form.module.css","components/Contacts/Contacts.js","components/Form/Form.js","components/Filter/Filter.js","components/App.js","index.js","components/Contacts/Contacts.module.css"],"names":["module","exports","Contacts","contacts","onDelete","className","styles","list","map","name","id","number","itemContact","btn","onClick","Form","state","nameInputId","shortid","generate","numberInputId","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","conteiner","htmlFor","label","input","type","pattern","title","required","onChange","Component","Filter","filter","filterContacts","App","addContact","contact","changeFilter","currentTarget","getVisibleContacts","normalizedFilter","toLowerCase","includes","normalizeFilter","deleteContact","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","setItem","stringify","secondTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,mBAAmB,YAAc,2B,mBCA9FD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,kBCAxDD,EAAOC,QAAU,CAAC,MAAQ,oBAAoB,MAAQ,oBAAoB,IAAM,oB,uIC+BjEC,EA5BE,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAb,OACf,mCACE,oBAAIC,UAAWC,IAAOC,KAAtB,SACGJ,EAASK,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAIC,EAAb,EAAaA,OAAb,OACZ,qBAAIN,UAAWC,IAAOM,YAAtB,UACE,iCACGH,EADH,KACWE,KAEX,wBAAQN,UAAWC,IAAOO,IAAKC,QAAS,kBAAMV,EAASM,IAAvD,sBAJsCA,W,wCCqEjCK,E,4MAxEbC,MAAQ,CACNP,KAAM,GACNE,OAAQ,GACRD,GAAI,I,EAGNO,YAAcC,IAAQC,W,EACtBC,cAAgBF,IAAQC,W,EAExBE,aAAe,SAAAC,GACb,MAAwBA,EAAEC,OAAlBd,EAAR,EAAQA,KAAMe,EAAd,EAAcA,MAEd,EAAKC,SAAL,eAAiBhB,EAAOe,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKb,OACzB,EAAKc,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CACZhB,KAAM,GACNE,OAAQ,M,4CAIZ,WACE,MAAyBoB,KAAKf,MAAtBP,EAAR,EAAQA,KAAME,EAAd,EAAcA,OACd,OACE,mCACE,uBAAMkB,SAAUE,KAAKL,aAAcrB,UAAWC,IAAO0B,UAArD,UACE,wBAAOC,QAASF,KAAKd,YAAaZ,UAAWC,IAAO4B,MAApD,iBAEE,uBACE7B,UAAWC,IAAO6B,MAClBC,KAAK,OACL3B,KAAK,OACL4B,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRf,MAAOf,EACP+B,SAAUT,KAAKV,aACfX,GAAIqB,KAAKd,iBAIb,wBAAOgB,QAASF,KAAKX,cAAef,UAAWC,IAAO4B,MAAtD,mBAEE,uBACE7B,UAAWC,IAAO6B,MAClBC,KAAK,MACL3B,KAAK,SACL4B,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRf,MAAOb,EACP6B,SAAUT,KAAKV,aACfX,GAAIqB,KAAKX,mBAIb,wBAAQf,UAAWC,IAAOO,IAAKuB,KAAK,SAApC,kC,GAhESK,a,iBCiBJC,EAjBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,eAAX,OACb,wBAAOvC,UAAWC,IAAO4B,MAAzB,kCAEE,uBACE7B,UAAWC,IAAO6B,MAClBC,KAAK,OACLZ,MAAOmB,EACPH,SAAUI,Q,iBCuEDC,E,4MA1Eb7B,MAAQ,CACNb,SAAU,CACR,CAAEO,GAAI,OAAQD,KAAM,gBAAiBE,OAAQ,aAC7C,CAAED,GAAI,OAAQD,KAAM,iBAAkBE,OAAQ,aAC9C,CAAED,GAAI,OAAQD,KAAM,gBAAiBE,OAAQ,aAC7C,CAAED,GAAI,OAAQD,KAAM,iBAAkBE,OAAQ,cAEhDgC,OAAQ,I,EAGVG,WAAa,YAAuB,IAC5BC,EAAU,CAAEtC,KADe,EAAnBA,KACUE,OADS,EAAbA,OACYD,GAAIQ,IAAQC,YAC5C,EAAKM,UAAS,gBAAGtB,EAAH,EAAGA,SAAH,MAAmB,CAAEA,SAAS,GAAD,mBAAMA,GAAN,CAAgB4C,S,EAG7DC,aAAe,SAAA1B,GACb,EAAKG,SAAS,CAAEkB,OAAQrB,EAAE2B,cAAczB,S,EAG1C0B,mBAAqB,WACnB,MAA6B,EAAKlC,MAA1B2B,EAAR,EAAQA,OAAQxC,EAAhB,EAAgBA,SACVgD,EAAmBR,EAAOS,cAEhC,OAAOjD,EAASwC,QAAO,YACrB,OADmC,EAAXlC,KACZ2C,cAAcC,SAASF,O,EAIvCP,eAAiB,WACf,MAA6B,EAAK5B,MAA1B2B,EAAR,EAAQA,OAAQxC,EAAhB,EAAgBA,SACVmD,EAAkBX,EAAOS,cAC/B,OAAOjD,EAASwC,QAAO,YACrB,OADmC,EAAXlC,KACZ2C,cAAcC,SAASC,O,EAIvCC,cAAgB,SAAA7C,GACd,EAAKe,UAAS,kBAAmB,CAC/BtB,SADY,EAAGA,SACIwC,QAAO,SAAAI,GAAO,OAAIA,EAAQrC,KAAOA,U,uDAIxD,WACE,IAAMP,EAAWqD,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAMzD,GAE9BuD,GACF3B,KAAKN,SAAS,CAAEtB,SAAUuD,M,gCAI9B,SAAmBG,EAAWC,GACxB/B,KAAKf,MAAMb,WAAa2D,EAAU3D,UACpCqD,aAAaO,QAAQ,WAAYJ,KAAKK,UAAUjC,KAAKf,MAAMb,a,oBAI/D,WACE,IAAQwC,EAAWZ,KAAKf,MAAhB2B,OACR,OACE,sBAAKtC,UAAWC,IAAO0B,UAAvB,UACE,oBAAI3B,UAAWC,IAAOgC,MAAtB,uBACA,cAAC,EAAD,CAAMT,SAAUE,KAAKe,aACrB,oBAAIzC,UAAWC,IAAO2D,YAAtB,sBACA,cAAC,EAAD,CAAQtB,OAAQA,EAAQC,eAAgBb,KAAKiB,eAC7C,cAAC,EAAD,CACE7C,SAAU4B,KAAKmB,qBACf9C,SAAU2B,KAAKwB,uB,GApEPd,aCHlByB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BtE,EAAOC,QAAU,CAAC,KAAO,uBAAuB,IAAM,sBAAsB,YAAc,iC","file":"static/js/main.3c5a8214.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"conteiner\":\"App_conteiner__3EfnP\",\"title\":\"App_title__1d0KY\",\"secondTitle\":\"App_secondTitle__2utFU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__10Vxp\",\"input\":\"Filter_input__3yfMg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Form_label__urhtK\",\"input\":\"Form_input__23e3W\",\"btn\":\"Form_btn__3wigc\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../Contacts/Contacts.module.css';\r\n\r\nconst Contacts = ({ contacts, onDelete }) => (\r\n  <>\r\n    <ul className={styles.list}>\r\n      {contacts.map(({ name, id, number }) => (\r\n        <li className={styles.itemContact} key={id}>\r\n          <span>\r\n            {name}: {number}\r\n          </span>\r\n          <button className={styles.btn} onClick={() => onDelete(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </>\r\n);\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contacts;\r\n","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport styles from '../Form/Form.module.css';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    id: '',\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit} className={styles.conteiner}>\r\n          <label htmlFor={this.nameInputId} className={styles.label}>\r\n            Name\r\n            <input\r\n              className={styles.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              value={name}\r\n              onChange={this.handleChange}\r\n              id={this.nameInputId}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor={this.numberInputId} className={styles.label}>\r\n            Number\r\n            <input\r\n              className={styles.input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              value={number}\r\n              onChange={this.handleChange}\r\n              id={this.numberInputId}\r\n            />\r\n          </label>\r\n\r\n          <button className={styles.btn} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, filterContacts }) => (\r\n  <label className={styles.label}>\r\n    Find contacts by name\r\n    <input\r\n      className={styles.input}\r\n      type=\"text\"\r\n      value={filter}\r\n      onChange={filterContacts}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  filterContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport Contacts from './Contacts/Contacts';\r\nimport Form from './Form/Form';\r\nimport Filter from './Filter/Filter';\r\nimport styles from './App.module.css';\r\nimport shortid from 'shortid';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  addContact = ({ name, number }) => {\r\n    const contact = { name, number, id: shortid.generate() };\r\n    this.setState(({ contacts }) => ({ contacts: [...contacts, contact] }));\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) => {\r\n      return name.toLowerCase().includes(normalizedFilter);\r\n    });\r\n  };\r\n\r\n  filterContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizeFilter = filter.toLowerCase();\r\n    return contacts.filter(({ name }) => {\r\n      return name.toLowerCase().includes(normalizeFilter);\r\n    });\r\n  };\r\n\r\n  deleteContact = id => {\r\n    this.setState(({ contacts }) => ({\r\n      contacts: contacts.filter(contact => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(contacts);\r\n\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    return (\r\n      <div className={styles.conteiner}>\r\n        <h1 className={styles.title}>Phonebook</h1>\r\n        <Form onSubmit={this.addContact} />\r\n        <h2 className={styles.secondTitle}>Contacts</h2>\r\n        <Filter filter={filter} filterContacts={this.changeFilter} />\r\n        <Contacts\r\n          contacts={this.getVisibleContacts()}\r\n          onDelete={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__awtwA\",\"btn\":\"Contacts_btn__2tdTI\",\"itemContact\":\"Contacts_itemContact__UVA0P\"};"],"sourceRoot":""}